//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NINA.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.7.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("%localappdata%\\NINA\\NINA.sqlite")]
        public string DatabaseLocation {
            get {
                return ((string)(this["DatabaseLocation"]));
            }
            set {
                this["DatabaseLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool UpdateSettings {
            get {
                return ((bool)(this["UpdateSettings"]));
            }
            set {
                this["UpdateSettings"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool UseSavedProfileSelection {
            get {
                return ((bool)(this["UseSavedProfileSelection"]));
            }
            set {
                this["UseSavedProfileSelection"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int AutoUpdateSource {
            get {
                return ((int)(this["AutoUpdateSource"]));
            }
            set {
                this["AutoUpdateSource"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Segoe UI")]
        public global::System.Windows.Media.FontFamily ApplicationFontFamily {
            get {
                return ((global::System.Windows.Media.FontFamily)(this["ApplicationFontFamily"]));
            }
            set {
                this["ApplicationFontFamily"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool SGPServerEnabled {
            get {
                return ((bool)(this["SGPServerEnabled"]));
            }
            set {
                this["SGPServerEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Normal")]
        public global::System.Windows.FontStretch FontStretch {
            get {
                return ((global::System.Windows.FontStretch)(this["FontStretch"]));
            }
            set {
                this["FontStretch"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Normal")]
        public global::System.Windows.FontStyle FontStyle {
            get {
                return ((global::System.Windows.FontStyle)(this["FontStyle"]));
            }
            set {
                this["FontStyle"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Normal")]
        public global::System.Windows.FontWeight FontWeight {
            get {
                return ((global::System.Windows.FontWeight)(this["FontWeight"]));
            }
            set {
                this["FontWeight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public int SaveQueueSize {
            get {
                return ((int)(this["SaveQueueSize"]));
            }
            set {
                this["SaveQueueSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool SingleDockLayout {
            get {
                return ((bool)(this["SingleDockLayout"]));
            }
            set {
                this["SingleDockLayout"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool CollapsedSidebar {
            get {
                return ((bool)(this["CollapsedSidebar"]));
            }
            set {
                this["CollapsedSidebar"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool HardwareAcceleration {
            get {
                return ((bool)(this["HardwareAcceleration"]));
            }
            set {
                this["HardwareAcceleration"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("[\"https://nighttime-imaging.eu/wp-json/nina/v1\"]")]
        public string PluginRepositories {
            get {
                return ((string)(this["PluginRepositories"]));
            }
            set {
                this["PluginRepositories"] = value;
            }
        }

        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
                    <WindowPlacement xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
                        <length>0</length>
                        <flags>0</flags>
                        <showCmd>0</showCmd>
                        <minPosition>
                            <X>0</X>
                            <Y>0</Y>
                        </minPosition>
                        <maxPosition>
                            <X>0</X>
                            <Y>0</Y>
                        </maxPosition>
                        <normalPosition>
                            <Left>0</Left>
                            <Top>0</Top>
                            <Right>0</Right>
                            <Bottom>0</Bottom>
                        </normalPosition>
                    </WindowPlacement>
                ")]
        public global::SaveWindowState.WindowPlacement WindowPlacement {
            get {
                return ((global::SaveWindowState.WindowPlacement)(this["WindowPlacement"]));
            }
            set {
                this["WindowPlacement"] = value;
            }
        }
    }
}
