<!--
    Copyright © 2016 - 2023 Stefan Berg <isbeorn86+NINA@googlemail.com> and the N.I.N.A. contributors

    This file is part of N.I.N.A. - Nighttime Imaging 'N' Astronomy.

    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.-->
<ResourceDictionary
    x:Class="NINA.Sequencer.Container.Datatemplates"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:alt="clr-namespace:NINA.WPF.Base.View;assembly=NINA.WPF.Base"
    xmlns:behaviors="clr-namespace:NINA.Sequencer.Behaviors"
    xmlns:converter="clr-namespace:NINA.View.Sequencer.Converter"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:NINA.Sequencer.Container"
    xmlns:ninactrl="clr-namespace:NINA.CustomControlLibrary;assembly=NINA.CustomControlLibrary"
    xmlns:ns="clr-namespace:NINA.Core.Locale;assembly=NINA.Core"
    xmlns:rules="clr-namespace:NINA.Core.Utility.ValidationRules;assembly=NINA.Core"
    xmlns:util="clr-namespace:NINA.Core.Utility;assembly=NINA.Core"
    xmlns:view="clr-namespace:NINA.View.Sequencer"
    xmlns:wpfbehaviors="clr-namespace:NINA.WPF.Base.Behaviors;assembly=NINA.WPF.Base">
    <Style x:Key="DSOHeaderExpanderStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <StackPanel>
                        <Border Height="10" BorderBrush="Transparent" />
                        <Border x:Name="topBorder" BorderBrush="{StaticResource SecondaryBackgroundBrush}">
                            <Grid
                                x:Name="Head"
                                Background="{StaticResource TertiaryBackgroundBrush}"
                                UseLayoutRounding="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Path
                                    x:Name="iconarrow"
                                    Grid.Column="0"
                                    Width="10"
                                    Height="10"
                                    Margin="10,0,10,0"
                                    Data="{StaticResource ArrowRightSVG}"
                                    Fill="{StaticResource ButtonForegroundBrush}"
                                    Stretch="Uniform" />
                                <Path
                                    x:Name="icon"
                                    Grid.Column="1"
                                    Width="20"
                                    Height="20"
                                    Data="{StaticResource TelescopeSVG}"
                                    Fill="{StaticResource ButtonForegroundBrush}"
                                    Stretch="Uniform" />
                                <ContentPresenter
                                    Grid.Column="2"
                                    Margin="4,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"
                                    UseLayoutRounding="True">
                                    <i:Interaction.Behaviors>
                                        <behaviors:DragDropBehavior />
                                    </i:Interaction.Behaviors>
                                </ContentPresenter>
                            </Grid>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="iconarrow" Property="Data" Value="{StaticResource ArrowDownSVG}" />
                            <Setter TargetName="iconarrow" Property="Margin" Value="5,0,10,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Head" Property="Background" Value="{StaticResource SecondaryBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DSOExpander" TargetType="Expander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Focusable="False"
                        UseLayoutRounding="True">
                        <DockPanel>
                            <ToggleButton
                                x:Name="HeaderSite"
                                MinWidth="0"
                                MinHeight="0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                DockPanel.Dock="Top"
                                FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource DSOHeaderExpanderStyle}" />
                            <ContentPresenter
                                x:Name="ExpandSite"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="false"
                                Visibility="Collapsed" />
                        </DockPanel>
                        <i:Interaction.Behaviors>
                            <behaviors:DragOverBehavior
                                DragAboveSize="0"
                                DragBelowSize="0"
                                DragOverCenterText="{ns:Loc Lbl_SequenceContainer_DeepSkyObjectContainer_UpdateTarget}" />
                            <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.TargetSequenceContainer" OnDropCommand="DropTargetCommand" />
                        </i:Interaction.Behaviors>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExposureInfoHeaderExpanderStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <StackPanel>
                        <Border Height="10" BorderBrush="Transparent" />
                        <Border x:Name="topBorder" BorderBrush="{StaticResource SecondaryBackgroundBrush}">
                            <Grid
                                x:Name="Head"
                                Background="{StaticResource TertiaryBackgroundBrush}"
                                UseLayoutRounding="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Path
                                    x:Name="iconarrow"
                                    Grid.Column="0"
                                    Width="10"
                                    Height="10"
                                    Margin="10,0,10,0"
                                    Data="{StaticResource ArrowRightSVG}"
                                    Fill="{StaticResource ButtonForegroundBrush}"
                                    Stretch="Uniform" />
                                <Path
                                    x:Name="icon"
                                    Grid.Column="1"
                                    Width="15"
                                    Height="15"
                                    Data="{StaticResource CameraSVG}"
                                    Fill="{StaticResource ButtonForegroundBrush}"
                                    Stretch="Uniform" />
                                <ContentPresenter
                                    Grid.Column="2"
                                    Margin="4,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"
                                    UseLayoutRounding="True">
                                    <i:Interaction.Behaviors>
                                        <behaviors:DragDropBehavior />
                                    </i:Interaction.Behaviors>
                                </ContentPresenter>
                            </Grid>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="iconarrow" Property="Data" Value="{StaticResource ArrowDownSVG}" />
                            <Setter TargetName="iconarrow" Property="Margin" Value="5,0,10,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Head" Property="Background" Value="{StaticResource SecondaryBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExposureInfoExpander" TargetType="Expander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Focusable="False"
                        UseLayoutRounding="True">
                        <DockPanel>
                            <ToggleButton
                                x:Name="HeaderSite"
                                MinWidth="0"
                                MinHeight="0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                DockPanel.Dock="Top"
                                FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ExposureInfoHeaderExpanderStyle}" />
                            <StackPanel DockPanel.Dock="Bottom">
                                <Border
                                    Height="10"
                                    Margin="0,0,0,0"
                                    HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}"
                                    Background="Transparent" />
                            </StackPanel>
                            <ContentPresenter
                                x:Name="ExpandSite"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="false"
                                Visibility="Collapsed" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <HierarchicalDataTemplate DataType="{x:Type local:SequenceRootContainer}" ItemsSource="{Binding Items}">
        <view:SequenceRootContainerView
            x:Name="MainSequenceContainer"
            Grid.RowSpan="1"
            Margin="0,0,0,0"
            Panel.ZIndex="-10"
            DataContext="{Binding UpdateSourceTrigger=PropertyChanged}" />
    </HierarchicalDataTemplate>

    <DataTemplate DataType="{x:Type local:ParallelContainer}">
        <view:SequenceContainerView>
            <view:SequenceContainerView.SequenceContainerContent>
                <TextBlock
                    Margin="5,5,0,0"
                    VerticalAlignment="Center"
                    FontStyle="Italic"
                    Text="{ns:Loc Lbl_SequenceContainer_ParallelContainer_Description}" />
            </view:SequenceContainerView.SequenceContainerContent>
        </view:SequenceContainerView>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:DeepSkyObjectContainer}">
        <view:SequenceContainerView>
            <view:SequenceContainerView.SequenceContainerContent>
                <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="0,0,0,2">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />

                        </Grid.RowDefinitions>

                        <Expander IsExpanded="{Binding Target.Expanded}" Style="{StaticResource DSOExpander}">
                            <Expander.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Border MinHeight="25">
                                        <TextBlock
                                            VerticalAlignment="Center"
                                            Foreground="{StaticResource ButtonForegroundBrush}"
                                            Text="{ns:Loc LblTarget}" />
                                    </Border>
                                    <StackPanel Margin="5,0,0,0" Orientation="Horizontal">
                                        <TextBlock
                                            VerticalAlignment="Center"
                                            Foreground="{StaticResource ButtonForegroundBrush}"
                                            Text="{Binding Target.TargetName}" />
                                        <TextBlock
                                            Margin="5,0,5,0"
                                            VerticalAlignment="Center"
                                            Foreground="{StaticResource ButtonForegroundBrush}"
                                            Text="|" />
                                        <TextBlock
                                            VerticalAlignment="Center"
                                            Foreground="{StaticResource ButtonForegroundBrush}"
                                            Text="{Binding Target.InputCoordinates.Coordinates.RAString}" />
                                        <TextBlock
                                            Margin="5,0,5,0"
                                            VerticalAlignment="Center"
                                            Foreground="{StaticResource ButtonForegroundBrush}"
                                            Text="|" />
                                        <TextBlock
                                            VerticalAlignment="Center"
                                            Foreground="{StaticResource ButtonForegroundBrush}"
                                            Text="{Binding Target.InputCoordinates.Coordinates.DecString}" />
                                        <TextBlock
                                            Margin="5,0,5,0"
                                            VerticalAlignment="Center"
                                            Foreground="{StaticResource ButtonForegroundBrush}"
                                            Text="|" />
                                        <TextBlock
                                            VerticalAlignment="Center"
                                            Foreground="{StaticResource ButtonForegroundBrush}"
                                            Text="{Binding Target.PositionAngle}" />
                                        <TextBlock
                                            VerticalAlignment="Center"
                                            Foreground="{StaticResource ButtonForegroundBrush}"
                                            Text="°" />
                                        <StackPanel.Style>
                                            <Style TargetType="StackPanel">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Expander}, Path=IsExpanded}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Style>
                                    </StackPanel>
                                </StackPanel>
                            </Expander.Header>
                            <Grid>
                                <Grid.Resources>
                                    <util:BindingProxy x:Key="nighttimeProxy" Data="{Binding NighttimeData}" />
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Grid Grid.Row="0" Margin="0,5,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock
                                        Width="50"
                                        VerticalAlignment="Center"
                                        Text="{ns:Loc LblName}"
                                        TextWrapping="Wrap" />

                                    <ninactrl:HintTextBox
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Margin="5,0,0,0"
                                        VerticalAlignment="Center"
                                        VerticalContentAlignment="Center"
                                        Foreground="{StaticResource PrimaryBrush}"
                                        HintText="{ns:Loc LblObjectNameHint}"
                                        Text="{Binding Target.TargetName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <StackPanel
                                        Grid.Column="2"
                                        Margin="5,0,0,0"
                                        Orientation="Horizontal">
                                        <Button
                                            Width="25"
                                            Height="25"
                                            Margin="5,0,5,0"
                                            VerticalAlignment="Center"
                                            HorizontalContentAlignment="Right"
                                            Command="{Binding CoordsToFramingCommand}"
                                            IsEnabled="{Binding Target.InputCoordinates, Converter={StaticResource InverseNullToBooleanConverter}}"
                                            Style="{StaticResource TertiaryBackgroundButton}">
                                            <Button.ToolTip>
                                                <ToolTip ToolTipService.ShowOnDisabled="False">
                                                    <TextBlock Text="{ns:Loc LblCoordinatesToFramingTooltip}" />
                                                </ToolTip>
                                            </Button.ToolTip>
                                            <Grid>
                                                <Path
                                                    Margin="5"
                                                    Data="{StaticResource FocusAssistantSVG}"
                                                    Fill="{StaticResource ButtonForegroundBrush}"
                                                    Stretch="Uniform" />
                                            </Grid>
                                        </Button>
                                        <Button
                                            Width="25"
                                            Height="25"
                                            Margin="5,0,5,0"
                                            VerticalAlignment="Center"
                                            HorizontalContentAlignment="Right"
                                            Command="{Binding CoordsFromPlanetariumCommand}"
                                            IsEnabled="{Binding Target.InputCoordinates, Converter={StaticResource InverseNullToBooleanConverter}}"
                                            Style="{StaticResource TertiaryBackgroundButton}">
                                            <Button.ToolTip>
                                                <ToolTip ToolTipService.ShowOnDisabled="False">
                                                    <TextBlock Text="{ns:Loc LblPlanetariumTooltip}" />
                                                </ToolTip>
                                            </Button.ToolTip>
                                            <Grid>
                                                <Path
                                                    Margin="5"
                                                    Data="{StaticResource GetCoordsSVG}"
                                                    Fill="{StaticResource ButtonForegroundBrush}"
                                                    Stretch="Uniform" />
                                            </Grid>
                                        </Button>
                                    </StackPanel>
                                </Grid>

                                <StackPanel
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Margin="0,5,0,0"
                                    DataContext="{Binding Target.InputCoordinates}"
                                    Orientation="Horizontal">
                                    <TextBlock
                                        Width="50"
                                        VerticalAlignment="Center"
                                        Text="{ns:Loc LblRA}" />
                                    <TextBox
                                        Width="40"
                                        Margin="5,0,0,0"
                                        VerticalAlignment="Center"
                                        TextAlignment="Right">
                                        <TextBox.Text>
                                            <Binding Path="RAHours" UpdateSourceTrigger="LostFocus">
                                                <Binding.ValidationRules>
                                                    <rules:HoursRule />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBlock VerticalAlignment="Center">h</TextBlock>
                                    <TextBox
                                        Width="40"
                                        Margin="5,0,0,0"
                                        VerticalAlignment="Center"
                                        TextAlignment="Right">
                                        <TextBox.Text>
                                            <Binding Path="RAMinutes" UpdateSourceTrigger="LostFocus">
                                                <Binding.ValidationRules>
                                                    <rules:MinutesRule />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBlock VerticalAlignment="Center">m</TextBlock>
                                    <TextBox
                                        Width="40"
                                        Margin="5,0,0,0"
                                        VerticalAlignment="Center"
                                        TextAlignment="Right">
                                        <TextBox.Text>
                                            <Binding
                                                Path="RASeconds"
                                                StringFormat="N1"
                                                UpdateSourceTrigger="LostFocus">
                                                <Binding.ValidationRules>
                                                    <rules:SecondsRule />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBlock VerticalAlignment="Center">s</TextBlock>
                                </StackPanel>
                                <StackPanel
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Margin="0,5,0,0"
                                    VerticalAlignment="Center"
                                    DataContext="{Binding Target.InputCoordinates}"
                                    Orientation="Horizontal">
                                    <TextBlock
                                        Width="50"
                                        VerticalAlignment="Center"
                                        Text="{ns:Loc LblDec}" />
                                    <TextBox
                                        Width="40"
                                        Margin="5,0,0,0"
                                        VerticalAlignment="Center"
                                        TextAlignment="Right">
                                        <TextBox.Text>
                                            <MultiBinding Converter="{StaticResource DecDegreeConverter}" UpdateSourceTrigger="LostFocus">
                                                <Binding Path="NegativeDec" />
                                                <Binding Path="DecDegrees">
                                                    <Binding.ValidationRules>
                                                        <rules:DegreesRule />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </MultiBinding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBlock VerticalAlignment="Center">d</TextBlock>
                                    <TextBox
                                        Width="40"
                                        Margin="5,0,0,0"
                                        VerticalAlignment="Center"
                                        TextAlignment="Right">
                                        <TextBox.Text>
                                            <Binding Path="DecMinutes" UpdateSourceTrigger="LostFocus">
                                                <Binding.ValidationRules>
                                                    <rules:MinutesRule />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBlock VerticalAlignment="Center">m</TextBlock>
                                    <TextBox
                                        Width="40"
                                        Margin="5,0,0,0"
                                        VerticalAlignment="Center"
                                        TextAlignment="Right">
                                        <TextBox.Text>
                                            <Binding
                                                Path="DecSeconds"
                                                StringFormat="N1"
                                                UpdateSourceTrigger="LostFocus">
                                                <Binding.ValidationRules>
                                                    <rules:SecondsRule />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBlock VerticalAlignment="Center">s</TextBlock>
                                </StackPanel>
                                <StackPanel
                                    Grid.Row="3"
                                    Grid.Column="0"
                                    Margin="0,5,0,0"
                                    VerticalAlignment="Center"
                                    Orientation="Horizontal">
                                    <TextBlock
                                        Width="50"
                                        VerticalAlignment="Center"
                                        Text="{ns:Loc LblRotation}" />
                                    <TextBox
                                        Width="40"
                                        Margin="5,0,0,0"
                                        DataContext="{Binding Target}"
                                        TextAlignment="Right">
                                        <TextBox.Text>
                                            <Binding Path="PositionAngle" UpdateSourceTrigger="LostFocus">
                                                <Binding.ValidationRules>
                                                    <rules:FullCircleDegreesRule />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBlock VerticalAlignment="Center">°</TextBlock>
                                </StackPanel>

                                <alt:AltitudeChart
                                    Grid.Row="0"
                                    Grid.RowSpan="5"
                                    Grid.Column="1"
                                    MinWidth="400"
                                    MinHeight="120"
                                    Margin="10,0,0,0"
                                    HorizontalAlignment="Stretch"
                                    HorizontalContentAlignment="Stretch"
                                    AnnotateAltitudeAxis="False"
                                    DataContext="{Binding Target.DeepSkyObject}"
                                    NighttimeData="{Binding Source={StaticResource nighttimeProxy}, Path=Data}" />
                            </Grid>
                        </Expander>

                        <Expander
                            Grid.Row="1"
                            IsExpanded="{Binding ExposureInfoListExpanded}"
                            Style="{StaticResource ExposureInfoExpander}">
                            <Expander.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Border MinHeight="25">
                                        <TextBlock
                                            VerticalAlignment="Center"
                                            Foreground="{StaticResource ButtonForegroundBrush}"
                                            Text="{ns:Loc Lbl_SequenceContainer_DeepSkyObjectContainer_ExposureInfo}" />
                                    </Border>
                                    <StackPanel Margin="5,0,0,0" Orientation="Horizontal">
                                        <TextBlock
                                            VerticalAlignment="Center"
                                            Foreground="{StaticResource ButtonForegroundBrush}"
                                            Text="{Binding ExposureInfoSummary}" />
                                        <StackPanel.Style>
                                            <Style TargetType="StackPanel">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Expander}, Path=IsExpanded}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Style>
                                    </StackPanel>
                                </StackPanel>
                            </Expander.Header>
                            <DataGrid
                                Grid.ColumnSpan="2"
                                AutoGenerateColumns="False"
                                CanUserAddRows="False"
                                ItemsSource="{Binding ExposureInfoList}">
                                <i:Interaction.Behaviors>
                                    <wpfbehaviors:BubbleScrollEvent />
                                </i:Interaction.Behaviors>
                                <DataGrid.Columns>

                                    <DataGridTemplateColumn
                                        Width="*"
                                        Header="{ns:Loc LblFilter}"
                                        IsReadOnly="True"
                                        SortDirection="Ascending">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Text="{Binding Filter, Mode=OneWay}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn
                                        Width="*"
                                        Header="{ns:Loc LblTotalNo}"
                                        IsReadOnly="True"
                                        SortDirection="Ascending">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Text="{Binding Count, Mode=OneWay}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn
                                        Width="*"
                                        Header="{ns:Loc LblTotal}"
                                        IsReadOnly="True"
                                        SortDirection="Ascending">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Text="{Binding TotalTime, Mode=OneWay}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn
                                        Width="*"
                                        Header="{ns:Loc LblTime}"
                                        IsReadOnly="True"
                                        SortDirection="Ascending">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Orientation="Horizontal">
                                                    <TextBlock Text="{Binding ExposureTime, Mode=OneWay}" />
                                                    <TextBlock Text=" s" />
                                                </StackPanel>

                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn
                                        Width="*"
                                        Header="{ns:Loc LblType}"
                                        IsReadOnly="True"
                                        SortDirection="Ascending">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Text="{Binding ImageType, Mode=OneWay}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn
                                        Width="*"
                                        Header="{ns:Loc LblBinning}"
                                        IsReadOnly="True"
                                        SortDirection="Ascending">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Orientation="Horizontal">
                                                    <TextBlock Text="{Binding BinningX, Mode=OneWay}" />
                                                    <TextBlock Text="x" />
                                                    <TextBlock Text="{Binding BinningY, Mode=OneWay}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn
                                        Width="*"
                                        Header="{ns:Loc LblGain}"
                                        IsReadOnly="True"
                                        SortDirection="Ascending">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Text="{Binding Gain, Converter={StaticResource MinusOneToEmptyStringConverter}, Mode=OneWay}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn
                                        Width="*"
                                        Header="{ns:Loc LblOffset}"
                                        IsReadOnly="True"
                                        SortDirection="Ascending">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Text="{Binding Offset, Converter={StaticResource MinusOneToEmptyStringConverter}, Mode=OneWay}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn
                                        Width="*"
                                        Header="{ns:Loc LblROI}"
                                        IsReadOnly="True"
                                        SortDirection="Ascending">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Orientation="Horizontal">
                                                    <TextBlock Text="{Binding ROI, Converter={StaticResource PercentageConverter}, Mode=OneWay}" />
                                                    <TextBlock Text="%" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn
                                        Width="30"
                                        Header=""
                                        IsReadOnly="True"
                                        SortDirection="Ascending">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button
                                                    Width="25"
                                                    Height="25"
                                                    Margin="5,0,5,0"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Command="{Binding DataContext.DeleteExposureInfoCommand, RelativeSource={RelativeSource AncestorType={x:Type view:SequenceContainerView}}}"
                                                    CommandParameter="{Binding}"
                                                    Style="{StaticResource BackgroundButton}">
                                                    <Grid>
                                                        <Path
                                                            Margin="5"
                                                            Data="{StaticResource TrashCanSVG}"
                                                            Fill="{StaticResource PrimaryBrush}"
                                                            Stretch="Uniform" />
                                                    </Grid>
                                                </Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Expander>
                    </Grid>
                </Border>
            </view:SequenceContainerView.SequenceContainerContent>
        </view:SequenceContainerView>
    </DataTemplate>
    <DataTemplate DataType="{x:Type local:SequenceContainer}">
        <view:SequenceContainerView />
    </DataTemplate>

    <HierarchicalDataTemplate DataType="{x:Type local:TargetAreaContainer}" ItemsSource="{Binding Items}">
        <Border
            Margin="-19,0,0,0"
            BorderBrush="{StaticResource TertiaryBackgroundBrush}"
            BorderThickness="0,5,0,0">
            <Grid Background="{StaticResource BackgroundBrush}" Visibility="{Binding Items.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}">
                <StackPanel
                    Margin="0,100,0,100"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Opacity="0.4"
                    Orientation="Vertical">
                    <Path
                        MaxWidth="80"
                        MaxHeight="80"
                        Margin="5"
                        Data="{StaticResource SketchSVG}"
                        Fill="{StaticResource PrimaryBrush}"
                        Stretch="Uniform" />
                    <TextBlock
                        FontSize="16"
                        FontStyle="Italic"
                        Text="{ns:Loc Lbl_SequenceContainer_SequenceRootContainer_TargetArea}"
                        TextAlignment="Center" />
                </StackPanel>

                <i:Interaction.Behaviors>
                    <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                    <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Container.ISequenceContainer;NINA.Sequencer.SequenceItem.ISequenceItem;NINA.Sequencer.TemplatedSequenceContainer;NINA.Sequencer.SequenceItem.ISequenceItem;NINA.Sequencer.TargetSequenceContainer" OnDropCommand="DropIntoCommand" />
                </i:Interaction.Behaviors>
            </Grid>
        </Border>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate DataType="{x:Type local:StartAreaContainer}" ItemsSource="{Binding Items}">
        <Grid
            MinHeight="100"
            Margin="-19,0,0,0"
            Background="{StaticResource BackgroundBrush}"
            Visibility="{Binding Items.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}">
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontStyle="Italic"
                Opacity="0.4"
                Text="{ns:Loc Lbl_SequenceContainer_SequenceRootContainer_StartArea}" />
            <i:Interaction.Behaviors>
                <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Container.ISequenceContainer;NINA.Sequencer.SequenceItem.ISequenceItem;NINA.Sequencer.TemplatedSequenceContainer" OnDropCommand="DropIntoCommand" />
            </i:Interaction.Behaviors>
        </Grid>
    </HierarchicalDataTemplate>
    <HierarchicalDataTemplate DataType="{x:Type local:EndAreaContainer}" ItemsSource="{Binding Items}">
        <Border
            Margin="-19,0,0,0"
            BorderBrush="{StaticResource TertiaryBackgroundBrush}"
            BorderThickness="0,5,0,0">
            <Grid
                MinHeight="100"
                Background="{StaticResource BackgroundBrush}"
                Visibility="{Binding Items.Count, Converter={StaticResource InverseZeroToVisibilityConverter}}">
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontStyle="Italic"
                    Opacity="0.4"
                    Text="{ns:Loc Lbl_SequenceContainer_SequenceRootContainer_EndArea}" />
                <i:Interaction.Behaviors>
                    <behaviors:DragOverBehavior DragAboveSize="0" DragBelowSize="0" />
                    <behaviors:DropIntoBehavior AllowedDragDropTypesString="NINA.Sequencer.Container.ISequenceContainer;NINA.Sequencer.SequenceItem.ISequenceItem;NINA.Sequencer.TemplatedSequenceContainer" OnDropCommand="DropIntoCommand" />
                </i:Interaction.Behaviors>
            </Grid>
        </Border>
    </HierarchicalDataTemplate>

    <DataTemplate DataType="{x:Type local:UnknownSequenceContainer}">
        <view:SequenceBlockView />
    </DataTemplate>
</ResourceDictionary>