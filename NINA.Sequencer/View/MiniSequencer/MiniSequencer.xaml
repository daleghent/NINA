<!--
    Copyright © 2016 - 2024 Stefan Berg <isbeorn86+NINA@googlemail.com> and the N.I.N.A. contributors

    This file is part of N.I.N.A. - Nighttime Imaging 'N' Astronomy.

    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.-->
<UserControl
    x:Class="NINA.View.Sequencer.MiniSequencer.MiniSequencer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cond="clr-namespace:NINA.Sequencer.Conditions"
    xmlns:cont="clr-namespace:NINA.Sequencer.Container"
    xmlns:converter="clr-namespace:NINA.View.Sequencer.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enum="clr-namespace:NINA.Core.Enum;assembly=NINA.Core"
    xmlns:local="clr-namespace:NINA.View.Sequencer.MiniSequencer"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ns="clr-namespace:NINA.Core.Locale;assembly=NINA.Core"
    xmlns:sequenceItem="clr-namespace:NINA.Sequencer.SequenceItem"
    xmlns:trigger="clr-namespace:NINA.Sequencer.Trigger"
    xmlns:wpfutil="clr-namespace:NINA.WPF.Base.Utility;assembly=NINA.WPF.Base"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <wpfutil:SharedResourceDictionary Source="/NINA.WPF.Base;component/Resources/StaticResources/ProfileService.xaml" />
                <wpfutil:SharedResourceDictionary Source="/NINA.WPF.Base;component/Resources/StaticResources/SVGDictionary.xaml" />
                <wpfutil:SharedResourceDictionary Source="/NINA.WPF.Base;component/Resources/StaticResources/Brushes.xaml" />
                <wpfutil:SharedResourceDictionary Source="/NINA.WPF.Base;component/Resources/StaticResources/Converters.xaml" />
                <wpfutil:SharedResourceDictionary Source="/NINA.Sequencer;component/Resources/Styles/ProgressStyle.xaml" />
                <wpfutil:SharedResourceDictionary Source="/NINA.WPF.Base;component/Resources/Styles/TextBlock.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <DataTemplate x:Key="TriggerTemplate2" DataType="{x:Type trigger:SequenceTrigger}">
                <local:MiniTrigger />
            </DataTemplate>
            <DataTemplate x:Key="ConditionTemplate2" DataType="{x:Type cond:SequenceCondition}">
                <local:MiniCondition />
            </DataTemplate>
            <DataTemplate x:Key="SequenceItemTemplate" DataType="{x:Type sequenceItem:SequenceItem}">
                <local:MiniSequenceItem />
            </DataTemplate>
            <DataTemplate x:Key="SequenceContainerTemplate" DataType="{x:Type cont:SequenceContainer}">
                <local:MiniContainer />
            </DataTemplate>
            <DataTemplate x:Key="DeepSkyObjectContainerTemplate" DataType="{x:Type cont:DeepSkyObjectContainer}">
                <local:MiniContainer />
            </DataTemplate>
            <local:MiniSequencerDataTemplateSelector
                x:Key="ConditionsAndTriggerSelector"
                DeepSkyObjectContainer="{StaticResource DeepSkyObjectContainerTemplate}"
                SequenceCondition="{StaticResource ConditionTemplate2}"
                SequenceContainer="{StaticResource SequenceContainerTemplate}"
                SequenceItem="{StaticResource SequenceItemTemplate}"
                SequenceTrigger="{StaticResource TriggerTemplate2}" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>

        <Grid.Resources>

            <converter:DisabledStatusToInvisibleConverter x:Key="DisabledStatusToInvisibleConverter" />
            <converter:SequenceEntityStatusRunningToVisibilityConverter x:Key="SequenceEntityStatusRunningToVisibilityConverter" />
            <DataTemplate x:Key="TriggerTemplate" DataType="{x:Type trigger:SequenceTrigger}">
                <local:MiniTrigger />
            </DataTemplate>
            <DataTemplate x:Key="ConditionTemplate" DataType="{x:Type cond:SequenceCondition}">
                <local:MiniCondition />
            </DataTemplate>
            <DataTemplate x:Key="SequenceItemTemplate" DataType="{x:Type sequenceItem:SequenceItem}">
                <local:MiniSequenceItem />
            </DataTemplate>

            <HierarchicalDataTemplate
                x:Key="SequenceContainerTemplate"
                DataType="{x:Type cont:SequenceContainer}"
                ItemsSource="{Binding Items}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20" />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Viewbox Grid.Column="0" HorizontalAlignment="Left">
                        <ContentPresenter Content="{Binding}" Style="{StaticResource ProgressPresenter}" />
                    </Viewbox>
                    <Path
                        Grid.Row="0"
                        Grid.Column="1"
                        Width="16"
                        Height="16"
                        Margin="5,0,0,0"
                        HorizontalAlignment="Left"
                        Data="{Binding Icon}"
                        Fill="{StaticResource PrimaryBrush}"
                        Stretch="Uniform"
                        UseLayoutRounding="True">
                        <Path.Style>
                            <Style TargetType="{x:Type Path}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static enum:SequenceEntityStatus.DISABLED}">
                                        <Setter Property="Opacity" Value="0.4" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                    <TextBlock
                        Grid.Column="2"
                        Margin="5,0,0,0"
                        HorizontalAlignment="Left"
                        Text="{Binding Name}">
                        <TextBlock.Style>
                            <Style BasedOn="{StaticResource StandardTextBlock}" TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static enum:SequenceEntityStatus.RUNNING}">
                                        <Setter Property="FontWeight" Value="Bold" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static enum:SequenceEntityStatus.DISABLED}">
                                        <Setter Property="TextDecorations" Value="Strikethrough" />
                                        <Setter Property="Opacity" Value="0.4" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <Grid
                        Grid.Row="1"
                        Grid.Column="1"
                        Grid.ColumnSpan="2"
                        Visibility="{Binding Status, Converter={StaticResource DisabledStatusToInvisibleConverter}}">
                        <Border BorderBrush="Transparent" Visibility="{Binding Conditions.Count, Converter={StaticResource ZeroToVisibilityConverter}}">
                            <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="0,0,0,0.5">
                                <ItemsControl ItemTemplateSelector="{StaticResource ConditionsAndTriggerSelector}" ItemsSource="{Binding Conditions}" />
                            </Border>
                        </Border>
                    </Grid>
                    <Grid
                        Grid.Row="2"
                        Grid.Column="1"
                        Grid.ColumnSpan="2"
                        Visibility="{Binding Status, Converter={StaticResource DisabledStatusToInvisibleConverter}}">
                        <Border BorderBrush="Transparent" Visibility="{Binding Triggers.Count, Converter={StaticResource ZeroToVisibilityConverter}}">
                            <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="0,0,0,0.5">
                                <ItemsControl ItemTemplateSelector="{StaticResource ConditionsAndTriggerSelector}" ItemsSource="{Binding Triggers}" />
                            </Border>
                        </Border>
                    </Grid>
                </Grid>
            </HierarchicalDataTemplate>
            <local:MiniSequencerDataTemplateSelector
                x:Key="TemplateSelector"
                DeepSkyObjectContainer="{StaticResource SequenceContainerTemplate}"
                SequenceCondition="{StaticResource ConditionTemplate}"
                SequenceContainer="{StaticResource SequenceContainerTemplate}"
                SequenceItem="{StaticResource SequenceItemTemplate}"
                SequenceTrigger="{StaticResource TriggerTemplate}" />
        </Grid.Resources>

        <TreeView
            Margin="-20,0,0,0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            BorderThickness="0"
            ItemTemplateSelector="{StaticResource TemplateSelector}"
            ItemsSource="{Binding Items}"
            ScrollViewer.CanContentScroll="True"
            ScrollViewer.VerticalScrollBarVisibility="Auto"
            SelectedItemChanged="TreeView_SelectedItemChanged"
            VirtualizingPanel.IsVirtualizing="True"
            VirtualizingPanel.IsVirtualizingWhenGrouping="True"
            VirtualizingPanel.ScrollUnit="Pixel"
            VirtualizingPanel.VirtualizationMode="Standard">
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" MinWidth="20" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Border
                                        x:Name="Bd"
                                        Grid.Column="1"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="true">
                                        <ContentPresenter
                                            x:Name="PART_Header"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            ContentSource="Header"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                    <ItemsPresenter
                                        x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Grid.ColumnSpan="2"
                                        Margin="0,0,0,0"
                                        HorizontalAlignment="Stretch" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <!--<Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true" />
                                            <Condition Property="IsSelectionActive" Value="false" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                    </MultiTrigger>-->
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static enum:SequenceEntityStatus.DISABLED}">
                                        <Setter Property="IsExpanded" Value="False" />
                                        <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static enum:SequenceEntityStatus.RUNNING}">
                                        <Setter Property="IsSelected" Value="True" />
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                            <Setter Property="ItemsPanel">
                                <Setter.Value>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
    </Grid>
</UserControl>